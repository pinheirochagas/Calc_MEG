function [fiab, fs] = pc2cohv(pc,R0,a,b,fn,T)%function function [fiab, fs] = pc2cohv(pc,R0,a,b,fn,T)% Transforms partial correlations pc into the coherence between% a[n] = a*x[n] and% b[n] = b*x[n].%% If no output requested, a plot of phase and magnitude is made.% rest as in PC2XSPECV%S. de Waele, March 2003.%Input checking and analysisif ~isstatv(pc), error('Partial correlations non-stationairy!'), endif ~exist('T'), T = 1; endif ~exist('fn'), fn = 200; end%if ~exist('R0'), R0 = I; ends = kingsize(pc);order = s(3)-1;dim = s(1); I = eye(dim);%Calculation of the coherence function[hab fs] = pc2xspecv(pc,R0,a,b,fn,T);haa      = real(pc2xspecv(pc,R0,a,a,fn,T));hbb      = real(pc2xspecv(pc,R0,b,b,fn,T));fiab = hab./sqrt(haa)./sqrt(hbb);if ~nargout,	%Display results is phase and magnitude	msc = abs(fiab).^2;	phase = angle(fiab)/2/pi*360; %in degrees	subplot(221)	semilogy(fs,haa)	axis tight		xlabel('n','Fontname','Symbol');	ylabel('f_a','Rotation',0)	subplot(222)	semilogy(fs,hbb)	axis tight		xlabel('n','Fontname','Symbol');	ylabel('f_b','Rotation',0)	subplot(223)	plot(fs,msc)	xlabel('n','Fontname','Symbol');	ylabel('MSC')	axis tight	xx = axis;	xx(3) = 0; xx(4) = 1;	try, axis(xx), end		subplot(224)	plot(fs,phase)	xlabel('n','Fontname','Symbol');	ylabel('Phase (degrees)')	axis tight	xx = axis;	xx(3) = 90*floor(min(phase)/90);	xx(4) = 90*ceil(max(phase)/90);	try, axis(xx), end	clear fiab fs	%clear outputend